{"version":3,"sources":["../src/withSizes.js"],"names":["debug","process","env","NODE_ENV","withSizes","mappedSizesToProps","WrappedComponent","parseMappedSizesToProps","dimensions","props","map","check","reduce","acc","state","initialSizes","propsToPass","dispatchSizes","setState","throttledDispatchSizes","window","addEventListener","removeEventListener","console","log","displayName"],"mappings":";;;;;;;;kQAAA;;AAEA;;;;AACA;;;;AAEA;;;;AACA;;;;AACA;;;;;;;;;;;;AAEA,IAAMA,QAAQC,WAAWA,QAAQC,GAAnB,IACZD,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,OAD3B;;AAGA,IAAMC,YAAY,SAAZA,SAAY;AAAA,oCAAIC,kBAAJ;AAAIA,sBAAJ;AAAA;;AAAA,SAA2B,UAACC,gBAAD,EAAsB;AAAA;;AACjE,QAAMC,0BAA0B,SAA1BA,uBAA0B,CAACC,UAAD,EAAaC,KAAb;AAAA,aAC9BJ,mBACGK,GADH,CACO;AAAA,eAASC,MAAMH,UAAN,EAAkBC,KAAlB,CAAT;AAAA,OADP,EAEGG,MAFH,CAEU,UAACC,GAAD,EAAMJ,KAAN;AAAA,4BAAsBI,GAAtB,EAA8BJ,KAA9B;AAAA,OAFV,EAEkD,EAFlD,CAD8B;AAAA,KAAhC;;AAKA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA,kNAGEK,KAHF,GAGU;AACNC,wBAAc,+BADR;AAENC,uBAAaT,wBAAwB,+BAAxB,EAA0C,MAAKE,KAA/C;;AAGf;;AALQ,SAHV,QAUEQ,aAVF,GAUkB,YAAM;AACpB,cAAMD,cAAcT,wBAAwB,+BAAxB,EAA0C,MAAKE,KAA/C,CAApB;;AAEA,cAAI,2BAAYO,WAAZ,EAAyB,MAAKF,KAAL,CAAWE,WAApC,CAAJ,EAAsD;AACpD,kBAAKE,QAAL,CAAc,EAAEF,wBAAF,EAAd;AACD;AACF,SAhBH,QAkBEG,sBAlBF,GAmBI,sBAAS,MAAKF,aAAd,EAA6B,GAA7B,CAnBJ;AAAA;;AAAA;AAAA;;;AAsBE;;AAtBF,4CAwBsB;AAClBG,iBAAOC,gBAAP,CAAwB,QAAxB,EAAkC,KAAKF,sBAAvC;AACA,eAAKF,aAAL;AACD;AA3BH;AAAA;AAAA,+CA6ByB;AACrBG,iBAAOE,mBAAP,CAA2B,QAA3B,EAAqC,KAAKH,sBAA1C;AACD;AA/BH;AAAA;AAAA,iCAiCW;AACP,cAAInB,KAAJ,EAAWuB,QAAQC,GAAR,CAAY,QAAZ,EAAsB,KAAKV,KAAL,CAAWE,WAAjC;AACX,iBAAO,8BAAC,gBAAD,eAAsB,KAAKP,KAA3B,EAAsC,KAAKK,KAAL,CAAWE,WAAjD,EAAP;AACD;AApCH;;AAAA;AAAA,gCACSS,WADT,kBACoC,8BAAenB,gBAAf,CADpC;AAsCD,GA5CiB;AAAA,CAAlB;;kBA8CeF,S","file":"withSizes.js","sourcesContent":["/* eslint-disable no-console */\n\nimport React, { Component } from 'react'\nimport throttle from 'lodash.throttle'\n\nimport getDisplayName from './utils/getDisplayName'\nimport shallowDiff from './utils/shallowDiff'\nimport getWindowSizes from './utils/getWindowSizes'\n\nconst debug = process && process.env &&\n  process.env.NODE_ENV === 'debug'\n\nconst withSizes = (...mappedSizesToProps) => (WrappedComponent) => {\n  const parseMappedSizesToProps = (dimensions, props) =>\n    mappedSizesToProps\n      .map(check => check(dimensions, props))\n      .reduce((acc, props) => ({ ...acc, ...props }), {})\n\n  return class ComponentWithSizes extends Component {\n    static displayName = `withSizes(${getDisplayName(WrappedComponent)})`\n\n    state = {\n      initialSizes: getWindowSizes(),\n      propsToPass: parseMappedSizesToProps(getWindowSizes(), this.props),\n    }\n\n    /* Dispatching & Throttling */\n\n    dispatchSizes = () => {\n      const propsToPass = parseMappedSizesToProps(getWindowSizes(), this.props)\n\n      if (shallowDiff(propsToPass, this.state.propsToPass)) {\n        this.setState({ propsToPass })\n      }\n    }\n\n    throttledDispatchSizes = (\n      throttle(this.dispatchSizes, 200)\n    )\n\n    /* Lifecycles */\n\n    componentDidMount() {\n      window.addEventListener('resize', this.throttledDispatchSizes)\n      this.dispatchSizes()\n    }\n\n    componentWillUnmount() {\n      window.removeEventListener('resize', this.throttledDispatchSizes)\n    }\n\n    render() {\n      if (debug) console.log('render', this.state.propsToPass)\n      return <WrappedComponent {...this.props} {...this.state.propsToPass} />\n    }\n  }\n}\n\nexport default withSizes\n"]}